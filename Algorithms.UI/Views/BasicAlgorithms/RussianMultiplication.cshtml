@{
    ViewBag.Title = "Mnożenie po rosyjsku";
}

<script>
    function getResults() {
        var a = getElement(1);
        var b = getElement(2);

        $.ajax({
            method: "POST",
            url: "/BasicAlgorithms/RussianMultiplication?a=" + a + "&b=" + b,
            success: function (results) {
                $("#resultsContainer").html(results);
            }
        });
    }

    function getElement(number) {
        return $("#element" + number).val();
    }
</script>

<article>
    <header>
        <hgroup>
            <h1>Mnożenie po rosyjsku</h1>
            <h2>Idea</h2>
        </hgroup>
    </header>
    <section>
        <p>
            Pomimo, iż mnożenie jest oczywistym działaniem, warto wiedzieć w jaki sposób można je zaimplementować
            (np. dla własnego typu danych - arytmetyka dużych liczb).
        </p>
        <p>
            Do poprawnego działania tego algorytmu na własnym typie danych należy zaimplementować:
            <ul>
                <li>sprawdzanie parzystości</li>
                <li>mnożenie i dzielenie przez <span class="math">2</span> (przesunięcia bitowe)</li>
                <li>dodawanie</li>
            </ul>
        </p>
        <p>
            Aby dowieść poprawności działania tego algorytmu, należy posłużycię się metodą niezmiennika pętli.
            Niezmiennik jest następujący: <span class="math">A*B = result + a*b</span>, gdzie <span class="math">A, B</span>
            to wartości wejściowe <span class="math">a, b</span>.
        </p>
    </section>
    <section>
        <header>
            <h1>Kod źródłowy</h1>
        </header>
        <script src="https://gist.github.com/krzysiekkogut/e7cc30ba48e55830e9b562dade4a8347.js"></script>
        <header>
            <h1>Spróbuj!</h1>
        </header>
    </section>
    <section>
        <div>
            <p>Podaj liczby do mnożenia:</p>
            <div class="form-group" style="margin-left: 0;">
                <dl>
                    <dt>Liczba pierwsza</dt>
                    <dd>@Html.TextBox("element1", "", htmlAttributes: new { placeholder = "9", @class = "form-control", id = "element1" })</dd>

                    <dt>Liczba druga</dt>
                    <dd>@Html.TextBox("element2", "", htmlAttributes: new { placeholder = "9", @class = "form-control", id = "element2" })</dd>
                </dl>
            </div>
            <button onclick="getResults()" class="btn btn-primary">Pomnoż</button>
            <br /><br />
            <div id="resultsContainer"></div>
        </div>
    </section>
</article>
