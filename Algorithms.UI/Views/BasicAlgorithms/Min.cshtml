@{
    ViewBag.Title = "Wyszukiwanie minimum (maksimum)";
}

<script>
    function getResults() {
        $.ajax({
            method: "POST",
            url: "/BasicAlgorithms/Min?values=" + getInput(),
            success: function (results) {
                $("#resultsContainer").html(results);
            }
        });
    }

    function getInput() {
        return $("#input").val();
    }
</script>

<article>
    <header>
        <h1>Wyszukiwanie minimum (maksimum)</h1>
    </header>
    <section>
        <p style="font-size: small">
            Poniżej będę odnosił się do minimum i relacji <span class="math"><</span>. Wyszukiwanie maksimum jest analogiczne.
        </p>
        <header>
            <h1>Idea</h1>
        </header>
        <p>
            Element, którego szukamy ma być mniejszy od wszystkich pozostałych.
            Nasuwa się zatem algorytm, który porówna każdy element z pozostałymi.
            Ten, który przejdzie wszystkie porównania zostanie zwrócony jako wynik działania algorytmu.
            Wadą tego rozwiązania jest jego złożoność: <span class="math">O(n<sup>2</sup>)</span>.
        </p>
        <p>
            Na szczęście, możemy to zrobić dużo szybciej, bo w czasie liniowym względem ilości elementów.
            Wiemy, że relecja <span class="math"><</span> jest przechodnia, czyli jeśli
            <span class="math">a < b</span> i <span class="math">b < c</span>, to <span class="math">a < c</span>.
            Wystarczy zatem przeglądnąć elementy zbioru "jeden po drugim", zapamiętując najmniejszy do tej pory element.
        </p>
    </section>
    <section>
        <header>
            <h1>Kod źródłowy</h1>
        </header>
        <script src="https://gist.github.com/krzysiekkogut/bd4a8c719cfee17bfd1f62fa1926f01b.js"></script>
    </section>
    <section>
        <header>
            <h1>Spróbuj!</h1>
        </header>
        <div>
            <p>Podaj liczby rozdzielone spacjami:</p>
            <div class="form-group" style="margin-left: 0;">
                @Html.TextBox("input", "", htmlAttributes: new { placeholder = "5 12 1 8 3 9 7", @class = "form-control", id = "input" })
            </div>
            <button onclick="getResults()" class="btn btn-primary">Znajdź minimum</button>
            <br /><br />
            <div id="resultsContainer"></div>
        </div>
    </section>
</article>