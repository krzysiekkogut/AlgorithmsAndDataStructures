@{
    ViewBag.Title = "Algorytmy i struktury danych";
}

<div class="jumbotron">
    <h1>Algorytmy i struktury danych</h1>
    <p class="lead">Przekrój algorytmów i struktur danych. Przeczytaj opis, zobacz kod źródłowy w C#.NET, odkryj wyniki działania.</p>
</div>

<div class="main-page-tiles">
    <div class="row">
        <div class="col-md-4">
            <h2>@Html.ActionLink("Struktury danych", "Index", "DataStructures")</h2>
            <p>
                Dobór odpowiedniej strktury dancyh może znacząco wpłynąć na efektywność naszego algorytmu.
            </p>
        </div>
        <div class="col-md-4">
            <h2>@Html.ActionLink("Podstawy", "Index", "BasicAlgorithms")</h2>
            <p>Zajrzyj tutaj, jeśli jesteś na początku przygody z algorytmiką.</p>
        </div>
        @*<div class="col-md-4">
            <h2>@Html.ActionLink("Sortowanie", "", "")</h2>
            <p>Prezentacja algorytmów sortujących.</p>
        </div>*@
    </div>
    <div class="row">
        @*<div class="col-md-4">
            <h2>@Html.ActionLink("Dziel i zwyciężaj", "", "")</h2>
            <p>Łatwiej rozwiązań mniejsze podproblemy niż walczyć żmudnie z problemem w całości.</p>
        </div>*@
        @*<div class="col-md-4">
            <h2>@Html.ActionLink("Algorytmy zachłanne", "", "")</h2>
            <p>W skrócie: podejmij najlepszą w tej chwili dezycję. Często intuicja się opłaca.</p>
        </div>*@
        @*<div class="col-md-4">
            <h2>@Html.ActionLink("Programowanie dynamiczne", "", "")</h2>
            <p>Kolejna przydatna technika projektowania algorytmów. Używana najczęściej do rozwiązywania problemów optymalizacyjnych.</p>
        </div>*@
    </div>
    <div class="row">
        @*<div class="col-md-4">
            <h2>@Html.ActionLink("Algorymy grafowe", "", "")</h2>
            <p>Prezentacja algorytmów wykorzystujących grafy.</p>
        </div>*@
    </div>
</div>